/**
 * Zaun
 * Zaun service 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Zaun) {
      root.Zaun = {};
    }
    root.Zaun.Bot = factory(root.Zaun.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The Bot model module.
   * @module model/Bot
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>Bot</code>.
   * @alias module:model/Bot
   * @class
   * @param id {String} 
   * @param name {String} 
   */
  var exports = function(id, name) {
    var _this = this;

    _this['id'] = id;
    _this['name'] = name;








  };

  /**
   * Constructs a <code>Bot</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Bot} obj Optional instance to populate.
   * @return {module:model/Bot} The populated <code>Bot</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('version')) {
        obj['version'] = ApiClient.convertToType(data['version'], 'String');
      }
      if (data.hasOwnProperty('desc')) {
        obj['desc'] = ApiClient.convertToType(data['desc'], 'String');
      }
      if (data.hasOwnProperty('lang')) {
        obj['lang'] = ApiClient.convertToType(data['lang'], 'String');
      }
      if (data.hasOwnProperty('timezone')) {
        obj['timezone'] = ApiClient.convertToType(data['timezone'], 'Number');
      }
      if (data.hasOwnProperty('flows')) {
        obj['flows'] = ApiClient.convertToType(data['flows'], Object);
      }
      if (data.hasOwnProperty('nlus')) {
        obj['nlus'] = ApiClient.convertToType(data['nlus'], Object);
      }
      if (data.hasOwnProperty('methods')) {
        obj['methods'] = ApiClient.convertToType(data['methods'], Object);
      }
      if (data.hasOwnProperty('config')) {
        obj['config'] = ApiClient.convertToType(data['config'], Object);
      }
    }
    return obj;
  }

  /**
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * @member {String} version
   */
  exports.prototype['version'] = undefined;
  /**
   * @member {String} desc
   */
  exports.prototype['desc'] = undefined;
  /**
   * @member {String} lang
   */
  exports.prototype['lang'] = undefined;
  /**
   * @member {Number} timezone
   */
  exports.prototype['timezone'] = undefined;
  /**
   * @member {Object} flows
   */
  exports.prototype['flows'] = undefined;
  /**
   * @member {Object} nlus
   */
  exports.prototype['nlus'] = undefined;
  /**
   * @member {Object} methods
   */
  exports.prototype['methods'] = undefined;
  /**
   * @member {Object} config
   */
  exports.prototype['config'] = undefined;



  return exports;
}));


